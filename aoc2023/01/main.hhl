import "Option.hhl";
import "String.hhl";

var s = readfile "input.txt";
var ls = call lines s;

func parse_line line start
    var first_digit = (call opt_none), last_digit;

    var i = 0;
    while i < (len line) do
        if (call is_digit line[i]) then
            if first_digit.is_none then
                first_digit = call opt_some line[i];
            end
            last_digit = line[i];
        end

        i = i + 1;
    end

    return parse_int ((to_string first_digit.some) + (to_string last_digit));
end

func sol1 start
    var line_list = ls.list;

    var i = 0, res = 0;
    while i < ls.current do
        res = res + call parse_line line_list[i];
        i = i + 1;
    end

    println "Solution 1: ", res;
end

# only find, dont replace the words
func parse_line2 line start
    var digit_names  = [9] ("one", "two", "three", "four", "five", "six", "seven", "eight", "nine");
    var first_digit = (call opt_none), last_digit;

    var name = "", j = 0, i = 0, found = false;
    while i < (len line) do
        j = 0;
        found = false;
        
        while j < (len digit_names) do
            name = digit_names[j];

            if (len line) < (i + (len name)) then
                j = j + 1;
                continue;
            end

            if (name == call substr line i (i + (len name))) then
                found = true;
                break;
            end

            j = j + 1;
        end

        if found then
            if first_digit.is_none then
                first_digit = call opt_some (to_string (j + 1));
            end
            last_digit = to_string (j + 1);
        else
            if (call is_digit line[i]) then
                if first_digit.is_none then
                    first_digit = call opt_some line[i];
                end
                last_digit = line[i];
            end
        end
        i = i + 1;
    end

    return parse_int ((to_string first_digit.some) + (to_string last_digit));
end

func sol2 start
    var ll = call dl_to_list ls;

    var i = 0, result = 0, parsed_line, p;
    while i < (len ll) do
        p = call parse_line2 ll[i];
        result = result + p;
        i = i + 1;
    end
println "Solution 2: ", result;
end

call sol1;
call sol2;
